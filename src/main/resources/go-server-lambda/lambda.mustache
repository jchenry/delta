{{>partial_header}}
{{#operations}}{{#operation}}
package main

import (
	"net/http"
	"os"

	"github.com/aws/aws-lambda-go/lambda"
	"github.com/awslabs/aws-lambda-go-api-proxy/httpadapter"
	"{{gitHost}}/{{gitUserId}}/{{gitRepoId}}/{{sourceFolder}}/operations"
	"github.com/matryer/way"
)

func main() {
	r := way.NewRouter()
	r.HandleFunc("{{#lambda.uppercase}}{{httpMethod}}{{/lambda.uppercase}}", "{{path}}", Handle{{nickname}}(way.Param, operations.{{nickname}}))
	if runtimeURI := os.Getenv("AWS_LAMBDA_RUNTIME_API"); runtimeURI != "" {
		lambda.Start(httpadapter.New(r).ProxyWithContext)
	} else {
		http.ListenAndServe(":8080", r)
	}
}
{{/operation}}
{{/operations}}

